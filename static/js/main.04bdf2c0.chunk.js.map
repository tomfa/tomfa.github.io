{"version":3,"sources":["utils/styles.js","Components/Timeline/EventImage.js","Components/Timeline/TechBadge.js","Components/Timeline/index.js","Components/FullScreen.js","utils/palette.js","Components/AwesomeSVG.js","Components/TopScreen.js","hooks.js","data/events.js","App.js","serviceWorker.js","index.js"],"names":["size","Image","styled","img","ImageWrapper","div","EventImage","image","carousellImages","link","hasImages","length","useState","isOpen","setOpen","src","alt","onClick","onClose","views","map","url","isFullscreen","href","loading","BadgesWrapper","Badge","span","props","color","sortTech","a","b","category","TechBadges","technologies","colorMap","projectType","library","language","platform","badges","Object","entries","forEach","key","values","value","push","label","sort","tech","TimeStamp","month","year","className","Icon","width","height","cx","cy","r","fill","EventDescription","p","Content","event","id","thumbnail","images","description","TimelineList","ul","TimelineListItem","li","Timeline","events","i","FullscreenWrapper","InnerFullScreen","FullScreen","children","results","colorPalettes","getRandomPalette","Math","floor","random","getRandomPositions","count","Array","radius","SVGCircle","circle","AwesomeSVG","palette","setPalette","usePalette","maxRadius","min","minRadius","getRandomSizeDistrubution","radiuses","positions","setPositions","xmlns","stroke","strokeWidth","TopScreen","isClient","window","getSize","innerWidth","undefined","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","eventData","muted","title","e","filter","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04bdf2c0.chunk.js","sourcesContent":["\n\nexport const size = {\n  medium: `(min-width: 480px)`,\n  large: `(min-width: 768px)`,\n};\n","import React, { useState } from 'react';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\nimport styled from 'styled-components';\n\nimport { size } from '../../utils/styles';\n\nconst Image = styled.img`\n  width: 100%;\n  cursor: pointer;\n  min-height: 200px;\n\n  @media ${size.large} {\n    transition: filter 0.3s;\n    filter: brightness(0.6);\n\n    &:hover {\n      filter: brightness(1);\n    }\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  max-width: 100%;\n  max-height: 300px;\n  overflow: hidden;\n`;\n\nexport const EventImage = ({ image, carousellImages, link }) => {\n  const hasImages = carousellImages && carousellImages.length;\n  const [isOpen, setOpen] = useState(false);\n\n  if (!hasImages) {\n    return (\n      <ImageWrapper>\n        <a href={link}>\n          <Image src={image} alt={link} loading=\"lazy\" />\n        </a>\n      </ImageWrapper>\n    );\n  }\n\n  return (\n    <ImageWrapper>\n      <Image src={image} alt={link} onClick={() => setOpen(true)} />\n      <ModalGateway>\n        {isOpen ? (\n          <Modal onClose={() => setOpen(false)}>\n            <Carousel\n              views={carousellImages.map(url => ({ src: url, alt: link }))}\n              isFullscreen={true}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </ImageWrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { size } from '../../utils/styles';\n\nconst BadgesWrapper = styled.div`\n  display: none;\n  width: 25%;\n  padding-right: 70px;\n  position: absolute;\n  bottom: 0;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: filter 0.5s;\n  filter: brightness(0.6);\n\n  &:hover {\n    filter: brightness(1);\n  }\n\n  @media ${size.large} {\n    display: block;\n  }\n`;\n\nconst Badge = styled.span`\n  display: block;\n  color: #dddddd;\n  font-weight: 200;\n  margin-top: 4px;\n  padding: 2px;\n  text-align: right;\n  padding-right: 0.5rem;\n  border-width: 0;\n  border-right-width: 1rem;\n  border-style: solid;\n  border-color: ${props => props.color || '#dddddd'};\n`;\n\nconst sortTech = (a, b) => {\n  if (a.category < b.category) {\n    return -1;\n  }\n  if (a.category > b.category) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const TechBadges = ({ technologies }) => {\n  const colorMap = {\n    projectType: '#eafbea',\n    library: '#6f9a8d',\n    language: '#1f6650',\n    platform: '#ea5e5e',\n  };\n\n  const badges = [];\n  Object.entries(technologies).forEach(([key, values]) => {\n    if (typeof values === 'string') {\n      values = [values];\n    }\n    values.forEach(value => badges.push({ category: key, label: value }));\n  });\n  return (\n    <BadgesWrapper>\n      {badges.sort(sortTech).map(tech => (\n        <Badge key={tech.label} color={colorMap[tech.category]}>\n          {tech.label}\n        </Badge>\n      ))}\n    </BadgesWrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { size } from '../../utils/styles';\n\nimport './Timeline.css';\n\nimport { EventImage } from './EventImage';\nimport { TechBadges } from './TechBadge';\n\nconst TimeStamp = ({ month, year }) => (\n  <time className=\"m-event-date\">\n    <span className=\"a-event-date-month\">{month}</span>\n    <span className=\"a-event-date-year\">{year}</span>\n  </time>\n);\n\nconst Icon = () => (\n  <div className=\"a-event-icon\">\n    <svg width=\"20\" height=\"20\">\n      <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#FFFFFF\"></circle>\n    </svg>\n  </div>\n);\n\nconst EventDescription = styled.p`\n  font-size: 1rem;\n  color: #dddddd;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  &:first-of-type {\n    padding-top: 0.8rem;\n  }\n`;\n\nconst Content = ({ event }) => (\n  <div className=\"m-event-block\">\n    <EventImage\n      key={event.id}\n      image={event.thumbnail}\n      carousellImages={event.images}\n      link={event.link}\n    />\n    <EventDescription>{event.description}</EventDescription>\n  </div>\n);\n\nconst TimelineList = styled.ul`\n  margin: 0.5rem 0 0 0;\n  padding: 0;\n  list-style: none;\n  position: relative;\n\n  /* The line */\n  @media ${size.large} {\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      width: 4px;\n      background: #757575;\n      left: 25%;\n      margin-left: -37px;\n    }\n  }\n`;\n\nconst TimelineListItem = styled.li`\n  position: relative;\n  margin-top: 1rem;\n\n  @media ${size.large} {\n    margin-top: 4rem;\n  }\n`;\n\nexport const Timeline = ({ events }) => (\n  <div>\n    <TimelineList>\n      {events.map((event, i) => (\n        <TimelineListItem key={i}>\n          <TimeStamp month={event.month} year={event.year} />\n          <TechBadges technologies={event.tech} />\n          <Icon />\n          <Content event={event} />\n        </TimelineListItem>\n      ))}\n    </TimelineList>\n  </div>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { size } from '../utils/styles';\n\nconst FullscreenWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n\n  @media ${size.large} {\n    overflow: hidden;\n  }\n  background-color: #101010;\n`;\n\nconst InnerFullScreen = styled.div`\n  vertical-align: middle;\n  width: 100%;\n`;\n\nconst FullScreen = ({ children, results = [] }) => (\n  <FullscreenWrapper>\n    <InnerFullScreen>{children}</InnerFullScreen>\n  </FullscreenWrapper>\n);\n\nexport default FullScreen;\n","import React, { useState } from 'react';\n\nconst colorPalettes = [\n  ['#d77fa1', '#e6b2c6', '#fef6fb', '#d6e5fa'],\n  ['#ffa259', '#fe6845', '#fa4252', '#91bd3a'],\n  ['#561f55', '#8b2f97', '#cf56a1', '#fcb2bf'],\n  ['#f8b195', '#f67280', '#c06c84', '#6c5b7b'],\n  ['#f8b195', '#f67280', '#4d80e4', '#6c5b7b'],\n  ['#beebe9', '#beebe9', '#fffdf9', '#ffe3ed'],\n  ['#9be3de', '#beebe9', '#fffdf9', '#ffe3ed'],\n  ['#eafbea', '#6f9a8d', '#1f6650', '#ea5e5e'],\n  ['#51eaea', '#ffdbc5', '#ff9d76', '#ef4339'],\n  ['#621055', '#b52b65', '#ed6663', '#ffa372'],\n];\n\nconst getRandomPalette = () => {\n  return colorPalettes[Math.floor(Math.random() * colorPalettes.length)];\n};\n\nexport const usePalette = () => {\n  const [palette, setPalette] = useState(getRandomPalette());\n  const setRandomPalette = () => setPalette(getRandomPalette());\n\n  return [palette, setRandomPalette];\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { usePalette } from '../utils/palette';\n\nconst getRandomSizeDistrubution = ({ width, height, count }) => {\n  const maxRadius = Math.floor((2 * Math.min(width, height)) / count);\n  const minRadius = Math.floor(maxRadius / 8);\n  return Array(count)\n    .fill()\n    .map(() => minRadius + Math.floor(Math.random() * (maxRadius - minRadius)));\n};\n\nconst getRandomPositions = ({ width, height, count }) => {\n  return Array(count)\n    .fill()\n    .map(radius => [\n      Math.floor(Math.random() * width),\n      Math.floor(Math.random() * height),\n    ]);\n};\n\nconst SVGCircle = styled.circle`\n  transition: all 1.5s;\n  cursor: pointer;\n\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nexport const AwesomeSVG = ({ width, height }) => {\n  const [palette, setPalette] = usePalette();\n  const count = palette.length * 3;\n  const [radiuses] = useState(\n    getRandomSizeDistrubution({ width, height, count })\n  );\n  const [positions, setPositions] = useState(\n    getRandomPositions({ width, height, count })\n  );\n\n  return (\n    <svg width={width} height={height} xmlns=\"http://www.w3.org/2000/svg\">\n      {positions.map(([cx, cy], i) => (\n        <SVGCircle\n          key={i}\n          cx={cx}\n          cy={cy}\n          r={radiuses[i]}\n          stroke=\"#212121\"\n          strokeWidth=\"1\"\n          fill={palette[i % palette.length]}\n          onClick={() => {\n            setPositions(getRandomPositions({ width, height, count }));\n            if (Math.random() > 0.93) {\n              setPalette();\n            }\n          }}\n        />\n      ))}\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport FullScreen from './FullScreen';\nimport { AwesomeSVG } from './AwesomeSVG';\nimport { useWindowSize } from '../hooks';\n\nexport const TopScreen = () => {\n  const size = useWindowSize();\n\n  return <FullScreen>\n    <AwesomeSVG width={size.width} height={size.height} />\n  </FullScreen>\n};\n","import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","export const eventData = [\n  {\n    year: 2019,\n    month: 'November',\n    tech: {\n      language: ['JS', 'SVG'],\n      platform: 'Github Pages',\n      library: 'React',\n      projectType: 'For fun',\n    },\n    link: 'https://github.com/tomfa/tomfa.github.io',\n    thumbnail: '/images/tomfa.github.io.png',\n    description: 'Personal home page with SVG animations and event timeline',\n  },\n  {\n    year: 2019,\n    month: 'September',\n    tech: {\n      language: ['Python'],\n      platform: ['AWS'],\n      library: ['Lambda', 'S3'],\n      projectType: 'For fun',\n    },\n    link: 'https://github.com/tomfa/s3-now',\n    thumbnail: '/images/tomfa.github.io.png',\n    description: 'Testing serverless api-key authenticated data storage',\n    muted: true,\n  },\n  {\n    year: 2019,\n    month: 'August',\n    tech: {\n      language: ['JS'],\n      platform: 'Zeit',\n      library: ['Node', 'JWT', 'Mailgun'],\n      projectType: 'For fun',\n    },\n    link: 'https://github.com/rix1/auth-now',\n    thumbnail: '/images/tomfa.github.io.png',\n    description: 'Serverless one-time-token email authentication',\n    muted: true,\n  },\n  {\n    year: 2018,\n    month: 'November',\n    tech: {\n      language: 'Python',\n      platform: 'AWS',\n      library: ['Terraform', 'Django'],\n      projectType: 'Meetup',\n    },\n    link: 'https://github.com/tomfa/graphy',\n    thumbnail: '/images/graphql.png',\n    description: 'GraphQL talk at Python meetup held by at Kolonial',\n  },\n  {\n    year: 2017,\n    month: 'September',\n    tech: {\n      language: 'JS',\n      library: ['Node', 'Hubot', 'Slack'],\n      projectType: 'Workshop',\n    },\n    link: 'https://github.com/bekk/chatops-workshop',\n    thumbnail: '/images/chatops-workshop.png',\n    description: 'Chatops workshop held at JavaZone 2017',\n  },\n  {\n    year: 2017,\n    month: 'August',\n    tech: {\n      language: 'JS',\n      library: ['Node', 'Hubot', 'Slack'],\n      projectType: 'For fun',\n    },\n    link: 'https://github.com/tomfa/botanist',\n    thumbnail: '/images/botanist.png',\n    description: 'Slack bot: Reporting on Sentry, Github++',\n  },\n  {\n    year: 2017,\n    month: 'April',\n    tech: {\n      projectType: 'Full-time job',\n    },\n    link: 'https://www.otovo.no',\n    thumbnail: '/images/otovo.png',\n    description: 'Started full time job as Software Engineer',\n    muted: true,\n  },\n  {\n    year: 2016,\n    month: 'November',\n    tech: {\n      platform: 'AWS',\n      library: ['S3', 'Cloudfront'],\n      projectType: 'Workshop',\n    },\n    link: 'https://github.com/tomfa/aws-frontend-workshop',\n    thumbnail: '/images/workshop-aws-frontend.png',\n    title: 'AWS frontend workshop',\n    description: 'Workshop held at Bekk consulting on deploying on AWS',\n  },\n  {\n    year: 2016,\n    month: 'August',\n    tech: {\n      platform: ['Heroku'],\n      language: ['JS', 'MongoDB'],\n      library: ['Node', 'React', 'PWA'],\n      projectType: 'For fun',\n    },\n    link: 'https://www.dutytime.org',\n    thumbnail: '/images/dutytime.png',\n    title: 'Progressive Web app: Dutytime',\n    description: 'Gamified progressive web app for tracking household chores',\n  },\n  {\n    year: 2016,\n    month: 'November',\n    tech: {\n      platform: ['Heroku'],\n      language: 'Bash',\n      projectType: 'For fun',\n    },\n    link: 'https://tomfa.github.io/herango-bash',\n    thumbnail: '/images/herango.png',\n    description: 'Bash script for quickly setting up a web app',\n  },\n  {\n    year: 2015,\n    month: 'August',\n    tech: {\n      projectType: 'Full-time job',\n    },\n    link: 'https://www.bekk.no',\n    thumbnail: '/images/bekk.png',\n    description: 'Started first full time job as Consultant',\n    muted: true,\n  },\n  {\n    year: 2015,\n    month: 'May',\n    tech: {\n      language: ['JS', 'C'],\n      library: ['Bluetooth', 'Arduino'],\n      projectType: 'Master thesis',\n    },\n    link: 'https://github.com/tomfa/anyboardjs',\n    thumbnail: '/images/anyboard.jpg',\n    description: 'Wrote master thesis on digital boardgames',\n  },\n  {\n    year: 2015,\n    month: 'August',\n    tech: {\n      projectType: 'Part-time job',\n    },\n    link: 'https://www.jrc.no',\n    thumbnail: '/images/jrc.png',\n    description: 'Part time job in student start-up, 2013 - 2015',\n    muted: true,\n  },\n  {\n    year: 2014,\n    month: 'August',\n    tech: {\n      language: ['JS', 'Python'],\n      library: ['jQuery', 'Django'],\n      projectType: 'Paid project',\n    },\n    thumbnail: '/images/iraki.jpg',\n    link: 'https://www.irakinutrition.com/',\n    description: 'Created home page for nutritionist',\n  },\n  {\n    year: 2014,\n    month: 'February',\n    tech: {\n      language: ['HTML', 'CSS', 'JS'],\n      library: ['jQuery'],\n      projectType: 'Paid project',\n    },\n    thumbnail: '/images/live-crowdfunding.png',\n    images: [\n      '/images/live-crowdfunding.png',\n      '/images/live-crowdfunding-2.png',\n      '/images/live-crowdfunding-3.png',\n    ],\n    description: 'Created signup page for Technoport 2014 crowdfunding event',\n  },\n  {\n    year: 2013,\n    month: 'April',\n    tech: {\n      language: ['HTML', 'CSS', 'JS'],\n      platform: 'WebFaction',\n      projectType: 'For fun',\n    },\n    link: 'http://www.webutvikling.org/tekled/',\n    thumbnail: '/images/tekled.png',\n    title: 'Tekled: Educational quiz',\n    description: 'Educational quizes for a simpler exam study',\n  },\n  {\n    year: 2013,\n    month: 'February',\n    tech: {\n      language: ['HTML', 'CSS'],\n      library: 'jQuery',\n      platform: 'WebFaction',\n      projectType: 'For fun',\n    },\n    link: 'https://github.com/tomfa/ababrygg',\n    thumbnail: '/images/ababrygg.png',\n    title: 'Ababrygg: Students brewing beer',\n    description: 'Static page for a student group',\n  },\n]\n  .map((e, i) => {\n    e.id = i;\n    return e;\n  })\n  .filter(e => !e.muted);\n","import React from 'react';\n\nimport { Timeline } from './Components/Timeline';\nimport { TopScreen } from './Components/TopScreen';\nimport { eventData } from './data/events';\n\nconst App = () => {\n\n  return (\n    <div>\n      <TopScreen />\n      <Timeline events={eventData} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}